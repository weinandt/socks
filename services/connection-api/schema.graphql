type HoldingServer {
  id: String!
  ipAddress: String!
}

type Connection {
  id: String!
  tenantId: String!
  holdingServer: HoldingServer!
}

input HoldingServerInput {
  id: String!
  ipAddress: String!
}

input RegisterConnectionInput {
  id: String!
  tenantId: String!
  holdingServer: HoldingServerInput!
}

input SendMessageToTenantInput {
  senderClientId: String!
  tenantId: String!
  message: String! # TODO: should this be a JSON object?
}

type Query {
  curTime: String!
}

type Mutation {
  registerConnection(input: RegisterConnectionInput!): Connection!
  deleteConnection(tenantId: String!, connectionId: String!): String!

  # Return value will always be null.
  sendMessageToTenant(input: SendMessageToTenantInput!): String
} 